services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8085:8084"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/db
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_DATASOURCE_DRIVER_CLASSNAME=com.mysql.jdbc.Driver
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - spring.data.mongodb.host=mongodb
      - spring.data.mongodb.port=27017
      - spring.data.mongodb.database=db
      - spring.data.mongodb.username=root
      - spring.data.mongodb.password=12345678
      - spring.data.mongodb.authentication-database=admin
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - db
      - mongodb
    networks:
      - michael-delivery-network
    restart: unless-stopped
  db:
    image: mysql:8.1
    restart: always
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3307:3306'
    expose:
      - '3307'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - michael-delivery-network
  mongodb:
    image: mongo:latest
    container_name: mongodb_contaner
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: 12345678
      MONGO_INITDB_DATABASE: db
    command:
      - '--logpath'
      - '/var/log/mongodb/mongod.log'
    ports:
      - 27017:27020
    volumes:
      - ./docker/mongodb_data:/data/db
      - ./docker/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js
    networks:
      - michael-delivery-network

networks:
  michael-delivery-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
